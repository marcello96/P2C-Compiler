// Generated from P2C.g4 by ANTLR 4.4
package com.compilers.P2C_Compiler;
import org.antlr.v4.runtime.Lexer;
import org.antlr.v4.runtime.CharStream;
import org.antlr.v4.runtime.Token;
import org.antlr.v4.runtime.TokenStream;
import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.atn.*;
import org.antlr.v4.runtime.dfa.DFA;
import org.antlr.v4.runtime.misc.*;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast"})
public class P2CLexer extends Lexer {
	static { RuntimeMetaData.checkVersion("4.4", RuntimeMetaData.VERSION); }

	protected static final DFA[] _decisionToDFA;
	protected static final PredictionContextCache _sharedContextCache =
		new PredictionContextCache();
	public static final int
		T__0=1, INT=2, LONG=3, DOUBLE=4, FLOAT=5, CHAR=6, BOOL=7, STRING=8, NULL=9, 
		TRUE=10, FALSE=11, IF=12, ELSIF=13, ELSE=14, WHILE=15, DO=16, DONE=17, 
		FOR=18, FUN=19, RETURN=20, LET=21, OF=22, ARRAY=23, RECORD=24, END=25, 
		UNDERLINE=26, LEFT_SQ_BRACKET=27, RIGHT_SQ_BRACKET=28, LEFT_BRACKET=29, 
		RIGHT_BRACKET=30, ASSIGN=31, AND=32, OR=33, RELATIONALEXPR=34, ADD_OPERATORS=35, 
		MUL_OPERATORS=36, EXCLAMATION=37, ARROW=38, COLON=39, COMMA=40, SEMICOLON=41, 
		IDENT=42, FLOATING_CONSTANT=43, INTEGER_CONSTANT=44, WHITESPACE=45, BLOCK_COMMENT=46, 
		LINE_COMMENT=47;
	public static String[] modeNames = {
		"DEFAULT_MODE"
	};

	public static final String[] tokenNames = {
		"'\\u0000'", "'\\u0001'", "'\\u0002'", "'\\u0003'", "'\\u0004'", "'\\u0005'", 
		"'\\u0006'", "'\\u0007'", "'\b'", "'\t'", "'\n'", "'\\u000B'", "'\f'", 
		"'\r'", "'\\u000E'", "'\\u000F'", "'\\u0010'", "'\\u0011'", "'\\u0012'", 
		"'\\u0013'", "'\\u0014'", "'\\u0015'", "'\\u0016'", "'\\u0017'", "'\\u0018'", 
		"'\\u0019'", "'\\u001A'", "'\\u001B'", "'\\u001C'", "'\\u001D'", "'\\u001E'", 
		"'\\u001F'", "' '", "'!'", "'\"'", "'#'", "'$'", "'%'", "'&'", "'''", 
		"'('", "')'", "'*'", "'+'", "','", "'-'", "'.'", "'/'"
	};
	public static final String[] ruleNames = {
		"T__0", "INT", "LONG", "DOUBLE", "FLOAT", "CHAR", "BOOL", "STRING", "NULL", 
		"TRUE", "FALSE", "IF", "ELSIF", "ELSE", "WHILE", "DO", "DONE", "FOR", 
		"FUN", "RETURN", "LET", "OF", "ARRAY", "RECORD", "END", "UNDERLINE", "LEFT_SQ_BRACKET", 
		"RIGHT_SQ_BRACKET", "LEFT_BRACKET", "RIGHT_BRACKET", "ASSIGN", "AND", 
		"OR", "RELATIONALEXPR", "ADD_OPERATORS", "MUL_OPERATORS", "EXCLAMATION", 
		"ARROW", "COLON", "COMMA", "SEMICOLON", "IDENT", "FLOATING_CONSTANT", 
		"INTEGER_CONSTANT", "DIGIT_SEQUENCE", "BINARY_CONSTANT", "DECIMAL_CONSTANT", 
		"OCTAL_CONSTANT", "HEXADECIMAL_CONSTANT", "HEXADECIMAL_PREFIX", "DIGIT", 
		"NONZERO_DIGIT", "OCTAL_DIGIT", "HEXADECIMAL_DIGIT", "WHITESPACE", "BLOCK_COMMENT", 
		"LINE_COMMENT"
	};


	public P2CLexer(CharStream input) {
		super(input);
		_interp = new LexerATNSimulator(this,_ATN,_decisionToDFA,_sharedContextCache);
	}

	@Override
	public String getGrammarFileName() { return "P2C.g4"; }

	@Override
	public String[] getTokenNames() { return tokenNames; }

	@Override
	public String[] getRuleNames() { return ruleNames; }

	@Override
	public String getSerializedATN() { return _serializedATN; }

	@Override
	public String[] getModeNames() { return modeNames; }

	@Override
	public ATN getATN() { return _ATN; }

	public static final String _serializedATN =
		"\3\u0430\ud6d1\u8206\uad2d\u4417\uaef1\u8d80\uaadd\2\61\u0181\b\1\4\2"+
		"\t\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7\t\7\4\b\t\b\4\t\t\t\4\n\t\n\4"+
		"\13\t\13\4\f\t\f\4\r\t\r\4\16\t\16\4\17\t\17\4\20\t\20\4\21\t\21\4\22"+
		"\t\22\4\23\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27\t\27\4\30\t\30\4\31"+
		"\t\31\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4\36\t\36\4\37\t\37\4 \t"+
		" \4!\t!\4\"\t\"\4#\t#\4$\t$\4%\t%\4&\t&\4\'\t\'\4(\t(\4)\t)\4*\t*\4+\t"+
		"+\4,\t,\4-\t-\4.\t.\4/\t/\4\60\t\60\4\61\t\61\4\62\t\62\4\63\t\63\4\64"+
		"\t\64\4\65\t\65\4\66\t\66\4\67\t\67\48\t8\49\t9\4:\t:\3\2\3\2\3\3\3\3"+
		"\3\3\3\3\3\4\3\4\3\4\3\4\3\4\3\5\3\5\3\5\3\5\3\5\3\5\3\5\3\6\3\6\3\6\3"+
		"\6\3\6\3\6\3\7\3\7\3\7\3\7\3\7\3\b\3\b\3\b\3\b\3\b\3\t\3\t\3\t\3\t\3\t"+
		"\3\t\3\t\3\n\3\n\3\n\3\n\3\n\3\13\3\13\3\13\3\13\3\13\3\f\3\f\3\f\3\f"+
		"\3\f\3\f\3\r\3\r\3\r\3\16\3\16\3\16\3\16\3\16\3\16\3\17\3\17\3\17\3\17"+
		"\3\17\3\20\3\20\3\20\3\20\3\20\3\20\3\21\3\21\3\21\3\22\3\22\3\22\3\22"+
		"\3\22\3\23\3\23\3\23\3\23\3\24\3\24\3\24\3\24\3\25\3\25\3\25\3\25\3\25"+
		"\3\25\3\25\3\26\3\26\3\26\3\26\3\27\3\27\3\27\3\30\3\30\3\30\3\30\3\30"+
		"\3\30\3\31\3\31\3\31\3\31\3\31\3\31\3\31\3\32\3\32\3\32\3\32\3\33\3\33"+
		"\3\34\3\34\3\35\3\35\3\36\3\36\3\37\3\37\3 \3 \3!\3!\3!\3!\3\"\3\"\3\""+
		"\3#\3#\3#\3#\3#\3#\3#\3#\3#\5#\u010e\n#\3$\3$\3%\3%\3&\3&\3\'\3\'\3\'"+
		"\3(\3(\3)\3)\3*\3*\3+\3+\7+\u0121\n+\f+\16+\u0124\13+\3,\3,\5,\u0128\n"+
		",\3,\3,\3,\3,\3,\3,\3,\5,\u0131\n,\3-\3-\3-\3-\5-\u0137\n-\3.\6.\u013a"+
		"\n.\r.\16.\u013b\3/\3/\3/\6/\u0141\n/\r/\16/\u0142\3\60\3\60\7\60\u0147"+
		"\n\60\f\60\16\60\u014a\13\60\3\61\3\61\7\61\u014e\n\61\f\61\16\61\u0151"+
		"\13\61\3\62\3\62\6\62\u0155\n\62\r\62\16\62\u0156\3\63\3\63\3\63\3\64"+
		"\3\64\3\65\3\65\3\66\3\66\3\67\3\67\38\68\u0165\n8\r8\168\u0166\38\38"+
		"\39\39\39\39\79\u016f\n9\f9\169\u0172\139\39\39\39\39\39\3:\3:\7:\u017b"+
		"\n:\f:\16:\u017e\13:\3:\3:\3\u0170\2;\3\3\5\4\7\5\t\6\13\7\r\b\17\t\21"+
		"\n\23\13\25\f\27\r\31\16\33\17\35\20\37\21!\22#\23%\24\'\25)\26+\27-\30"+
		"/\31\61\32\63\33\65\34\67\359\36;\37= ?!A\"C#E$G%I&K\'M(O)Q*S+U,W-Y.["+
		"\2]\2_\2a\2c\2e\2g\2i\2k\2m\2o/q\60s\61\3\2\20\4\2>>@@\4\2--//\4\2,,\61"+
		"\61\5\2C\\aac|\6\2\62;C\\aac|\4\2DDdd\3\2\62\63\4\2ZZzz\3\2\62;\3\2\63"+
		";\3\2\629\5\2\62;CHch\5\2\13\f\16\17\"\"\4\2\f\f\17\17\u0188\2\3\3\2\2"+
		"\2\2\5\3\2\2\2\2\7\3\2\2\2\2\t\3\2\2\2\2\13\3\2\2\2\2\r\3\2\2\2\2\17\3"+
		"\2\2\2\2\21\3\2\2\2\2\23\3\2\2\2\2\25\3\2\2\2\2\27\3\2\2\2\2\31\3\2\2"+
		"\2\2\33\3\2\2\2\2\35\3\2\2\2\2\37\3\2\2\2\2!\3\2\2\2\2#\3\2\2\2\2%\3\2"+
		"\2\2\2\'\3\2\2\2\2)\3\2\2\2\2+\3\2\2\2\2-\3\2\2\2\2/\3\2\2\2\2\61\3\2"+
		"\2\2\2\63\3\2\2\2\2\65\3\2\2\2\2\67\3\2\2\2\29\3\2\2\2\2;\3\2\2\2\2=\3"+
		"\2\2\2\2?\3\2\2\2\2A\3\2\2\2\2C\3\2\2\2\2E\3\2\2\2\2G\3\2\2\2\2I\3\2\2"+
		"\2\2K\3\2\2\2\2M\3\2\2\2\2O\3\2\2\2\2Q\3\2\2\2\2S\3\2\2\2\2U\3\2\2\2\2"+
		"W\3\2\2\2\2Y\3\2\2\2\2o\3\2\2\2\2q\3\2\2\2\2s\3\2\2\2\3u\3\2\2\2\5w\3"+
		"\2\2\2\7{\3\2\2\2\t\u0080\3\2\2\2\13\u0087\3\2\2\2\r\u008d\3\2\2\2\17"+
		"\u0092\3\2\2\2\21\u0097\3\2\2\2\23\u009e\3\2\2\2\25\u00a3\3\2\2\2\27\u00a8"+
		"\3\2\2\2\31\u00ae\3\2\2\2\33\u00b1\3\2\2\2\35\u00b7\3\2\2\2\37\u00bc\3"+
		"\2\2\2!\u00c2\3\2\2\2#\u00c5\3\2\2\2%\u00ca\3\2\2\2\'\u00ce\3\2\2\2)\u00d2"+
		"\3\2\2\2+\u00d9\3\2\2\2-\u00dd\3\2\2\2/\u00e0\3\2\2\2\61\u00e6\3\2\2\2"+
		"\63\u00ed\3\2\2\2\65\u00f1\3\2\2\2\67\u00f3\3\2\2\29\u00f5\3\2\2\2;\u00f7"+
		"\3\2\2\2=\u00f9\3\2\2\2?\u00fb\3\2\2\2A\u00fd\3\2\2\2C\u0101\3\2\2\2E"+
		"\u010d\3\2\2\2G\u010f\3\2\2\2I\u0111\3\2\2\2K\u0113\3\2\2\2M\u0115\3\2"+
		"\2\2O\u0118\3\2\2\2Q\u011a\3\2\2\2S\u011c\3\2\2\2U\u011e\3\2\2\2W\u0130"+
		"\3\2\2\2Y\u0136\3\2\2\2[\u0139\3\2\2\2]\u013d\3\2\2\2_\u0144\3\2\2\2a"+
		"\u014b\3\2\2\2c\u0152\3\2\2\2e\u0158\3\2\2\2g\u015b\3\2\2\2i\u015d\3\2"+
		"\2\2k\u015f\3\2\2\2m\u0161\3\2\2\2o\u0164\3\2\2\2q\u016a\3\2\2\2s\u0178"+
		"\3\2\2\2uv\7/\2\2v\4\3\2\2\2wx\7k\2\2xy\7p\2\2yz\7v\2\2z\6\3\2\2\2{|\7"+
		"n\2\2|}\7q\2\2}~\7p\2\2~\177\7i\2\2\177\b\3\2\2\2\u0080\u0081\7f\2\2\u0081"+
		"\u0082\7q\2\2\u0082\u0083\7w\2\2\u0083\u0084\7d\2\2\u0084\u0085\7n\2\2"+
		"\u0085\u0086\7g\2\2\u0086\n\3\2\2\2\u0087\u0088\7h\2\2\u0088\u0089\7n"+
		"\2\2\u0089\u008a\7q\2\2\u008a\u008b\7c\2\2\u008b\u008c\7v\2\2\u008c\f"+
		"\3\2\2\2\u008d\u008e\7e\2\2\u008e\u008f\7j\2\2\u008f\u0090\7c\2\2\u0090"+
		"\u0091\7t\2\2\u0091\16\3\2\2\2\u0092\u0093\7d\2\2\u0093\u0094\7q\2\2\u0094"+
		"\u0095\7q\2\2\u0095\u0096\7n\2\2\u0096\20\3\2\2\2\u0097\u0098\7u\2\2\u0098"+
		"\u0099\7v\2\2\u0099\u009a\7t\2\2\u009a\u009b\7k\2\2\u009b\u009c\7p\2\2"+
		"\u009c\u009d\7i\2\2\u009d\22\3\2\2\2\u009e\u009f\7p\2\2\u009f\u00a0\7"+
		"w\2\2\u00a0\u00a1\7n\2\2\u00a1\u00a2\7n\2\2\u00a2\24\3\2\2\2\u00a3\u00a4"+
		"\7v\2\2\u00a4\u00a5\7t\2\2\u00a5\u00a6\7w\2\2\u00a6\u00a7\7g\2\2\u00a7"+
		"\26\3\2\2\2\u00a8\u00a9\7h\2\2\u00a9\u00aa\7c\2\2\u00aa\u00ab\7n\2\2\u00ab"+
		"\u00ac\7u\2\2\u00ac\u00ad\7g\2\2\u00ad\30\3\2\2\2\u00ae\u00af\7k\2\2\u00af"+
		"\u00b0\7h\2\2\u00b0\32\3\2\2\2\u00b1\u00b2\7g\2\2\u00b2\u00b3\7n\2\2\u00b3"+
		"\u00b4\7u\2\2\u00b4\u00b5\7k\2\2\u00b5\u00b6\7h\2\2\u00b6\34\3\2\2\2\u00b7"+
		"\u00b8\7g\2\2\u00b8\u00b9\7n\2\2\u00b9\u00ba\7u\2\2\u00ba\u00bb\7g\2\2"+
		"\u00bb\36\3\2\2\2\u00bc\u00bd\7y\2\2\u00bd\u00be\7j\2\2\u00be\u00bf\7"+
		"k\2\2\u00bf\u00c0\7n\2\2\u00c0\u00c1\7g\2\2\u00c1 \3\2\2\2\u00c2\u00c3"+
		"\7f\2\2\u00c3\u00c4\7q\2\2\u00c4\"\3\2\2\2\u00c5\u00c6\7f\2\2\u00c6\u00c7"+
		"\7q\2\2\u00c7\u00c8\7p\2\2\u00c8\u00c9\7g\2\2\u00c9$\3\2\2\2\u00ca\u00cb"+
		"\7h\2\2\u00cb\u00cc\7q\2\2\u00cc\u00cd\7t\2\2\u00cd&\3\2\2\2\u00ce\u00cf"+
		"\7h\2\2\u00cf\u00d0\7w\2\2\u00d0\u00d1\7p\2\2\u00d1(\3\2\2\2\u00d2\u00d3"+
		"\7t\2\2\u00d3\u00d4\7g\2\2\u00d4\u00d5\7v\2\2\u00d5\u00d6\7w\2\2\u00d6"+
		"\u00d7\7t\2\2\u00d7\u00d8\7p\2\2\u00d8*\3\2\2\2\u00d9\u00da\7n\2\2\u00da"+
		"\u00db\7g\2\2\u00db\u00dc\7v\2\2\u00dc,\3\2\2\2\u00dd\u00de\7q\2\2\u00de"+
		"\u00df\7h\2\2\u00df.\3\2\2\2\u00e0\u00e1\7c\2\2\u00e1\u00e2\7t\2\2\u00e2"+
		"\u00e3\7t\2\2\u00e3\u00e4\7c\2\2\u00e4\u00e5\7{\2\2\u00e5\60\3\2\2\2\u00e6"+
		"\u00e7\7t\2\2\u00e7\u00e8\7g\2\2\u00e8\u00e9\7e\2\2\u00e9\u00ea\7q\2\2"+
		"\u00ea\u00eb\7t\2\2\u00eb\u00ec\7f\2\2\u00ec\62\3\2\2\2\u00ed\u00ee\7"+
		"g\2\2\u00ee\u00ef\7p\2\2\u00ef\u00f0\7f\2\2\u00f0\64\3\2\2\2\u00f1\u00f2"+
		"\7a\2\2\u00f2\66\3\2\2\2\u00f3\u00f4\7]\2\2\u00f48\3\2\2\2\u00f5\u00f6"+
		"\7_\2\2\u00f6:\3\2\2\2\u00f7\u00f8\7*\2\2\u00f8<\3\2\2\2\u00f9\u00fa\7"+
		"+\2\2\u00fa>\3\2\2\2\u00fb\u00fc\7?\2\2\u00fc@\3\2\2\2\u00fd\u00fe\7c"+
		"\2\2\u00fe\u00ff\7p\2\2\u00ff\u0100\7f\2\2\u0100B\3\2\2\2\u0101\u0102"+
		"\7q\2\2\u0102\u0103\7t\2\2\u0103D\3\2\2\2\u0104\u010e\t\2\2\2\u0105\u0106"+
		"\7>\2\2\u0106\u010e\7?\2\2\u0107\u0108\7@\2\2\u0108\u010e\7?\2\2\u0109"+
		"\u010a\7?\2\2\u010a\u010e\7?\2\2\u010b\u010c\7#\2\2\u010c\u010e\7?\2\2"+
		"\u010d\u0104\3\2\2\2\u010d\u0105\3\2\2\2\u010d\u0107\3\2\2\2\u010d\u0109"+
		"\3\2\2\2\u010d\u010b\3\2\2\2\u010eF\3\2\2\2\u010f\u0110\t\3\2\2\u0110"+
		"H\3\2\2\2\u0111\u0112\t\4\2\2\u0112J\3\2\2\2\u0113\u0114\7#\2\2\u0114"+
		"L\3\2\2\2\u0115\u0116\7/\2\2\u0116\u0117\7@\2\2\u0117N\3\2\2\2\u0118\u0119"+
		"\7<\2\2\u0119P\3\2\2\2\u011a\u011b\7.\2\2\u011bR\3\2\2\2\u011c\u011d\7"+
		"=\2\2\u011dT\3\2\2\2\u011e\u0122\t\5\2\2\u011f\u0121\t\6\2\2\u0120\u011f"+
		"\3\2\2\2\u0121\u0124\3\2\2\2\u0122\u0120\3\2\2\2\u0122\u0123\3\2\2\2\u0123"+
		"V\3\2\2\2\u0124\u0122\3\2\2\2\u0125\u0127\5i\65\2\u0126\u0128\5[.\2\u0127"+
		"\u0126\3\2\2\2\u0127\u0128\3\2\2\2\u0128\u0129\3\2\2\2\u0129\u012a\7\60"+
		"\2\2\u012a\u012b\5[.\2\u012b\u0131\3\2\2\2\u012c\u012d\7\62\2\2\u012d"+
		"\u012e\7\60\2\2\u012e\u012f\3\2\2\2\u012f\u0131\5[.\2\u0130\u0125\3\2"+
		"\2\2\u0130\u012c\3\2\2\2\u0131X\3\2\2\2\u0132\u0137\5_\60\2\u0133\u0137"+
		"\5a\61\2\u0134\u0137\5c\62\2\u0135\u0137\5]/\2\u0136\u0132\3\2\2\2\u0136"+
		"\u0133\3\2\2\2\u0136\u0134\3\2\2\2\u0136\u0135\3\2\2\2\u0137Z\3\2\2\2"+
		"\u0138\u013a\5g\64\2\u0139\u0138\3\2\2\2\u013a\u013b\3\2\2\2\u013b\u0139"+
		"\3\2\2\2\u013b\u013c\3\2\2\2\u013c\\\3\2\2\2\u013d\u013e\7\62\2\2\u013e"+
		"\u0140\t\7\2\2\u013f\u0141\t\b\2\2\u0140\u013f\3\2\2\2\u0141\u0142\3\2"+
		"\2\2\u0142\u0140\3\2\2\2\u0142\u0143\3\2\2\2\u0143^\3\2\2\2\u0144\u0148"+
		"\5i\65\2\u0145\u0147\5g\64\2\u0146\u0145\3\2\2\2\u0147\u014a\3\2\2\2\u0148"+
		"\u0146\3\2\2\2\u0148\u0149\3\2\2\2\u0149`\3\2\2\2\u014a\u0148\3\2\2\2"+
		"\u014b\u014f\7\62\2\2\u014c\u014e\5k\66\2\u014d\u014c\3\2\2\2\u014e\u0151"+
		"\3\2\2\2\u014f\u014d\3\2\2\2\u014f\u0150\3\2\2\2\u0150b\3\2\2\2\u0151"+
		"\u014f\3\2\2\2\u0152\u0154\5e\63\2\u0153\u0155\5m\67\2\u0154\u0153\3\2"+
		"\2\2\u0155\u0156\3\2\2\2\u0156\u0154\3\2\2\2\u0156\u0157\3\2\2\2\u0157"+
		"d\3\2\2\2\u0158\u0159\7\62\2\2\u0159\u015a\t\t\2\2\u015af\3\2\2\2\u015b"+
		"\u015c\t\n\2\2\u015ch\3\2\2\2\u015d\u015e\t\13\2\2\u015ej\3\2\2\2\u015f"+
		"\u0160\t\f\2\2\u0160l\3\2\2\2\u0161\u0162\t\r\2\2\u0162n\3\2\2\2\u0163"+
		"\u0165\t\16\2\2\u0164\u0163\3\2\2\2\u0165\u0166\3\2\2\2\u0166\u0164\3"+
		"\2\2\2\u0166\u0167\3\2\2\2\u0167\u0168\3\2\2\2\u0168\u0169\b8\2\2\u0169"+
		"p\3\2\2\2\u016a\u016b\7%\2\2\u016b\u016c\7%\2\2\u016c\u0170\3\2\2\2\u016d"+
		"\u016f\13\2\2\2\u016e\u016d\3\2\2\2\u016f\u0172\3\2\2\2\u0170\u0171\3"+
		"\2\2\2\u0170\u016e\3\2\2\2\u0171\u0173\3\2\2\2\u0172\u0170\3\2\2\2\u0173"+
		"\u0174\7%\2\2\u0174\u0175\7%\2\2\u0175\u0176\3\2\2\2\u0176\u0177\b9\2"+
		"\2\u0177r\3\2\2\2\u0178\u017c\7%\2\2\u0179\u017b\n\17\2\2\u017a\u0179"+
		"\3\2\2\2\u017b\u017e\3\2\2\2\u017c\u017a\3\2\2\2\u017c\u017d\3\2\2\2\u017d"+
		"\u017f\3\2\2\2\u017e\u017c\3\2\2\2\u017f\u0180\b:\2\2\u0180t\3\2\2\2\20"+
		"\2\u010d\u0122\u0127\u0130\u0136\u013b\u0142\u0148\u014f\u0156\u0166\u0170"+
		"\u017c\3\b\2\2";
	public static final ATN _ATN =
		new ATNDeserializer().deserialize(_serializedATN.toCharArray());
	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
		for (int i = 0; i < _ATN.getNumberOfDecisions(); i++) {
			_decisionToDFA[i] = new DFA(_ATN.getDecisionState(i), i);
		}
	}
}